name: BestCICDtask
# failed test
on:
  push:
    branches:
      - 'v[0-9]+\.[0-9]+'

jobs:
  trivy-scan-code:
    runs-on: ubuntu-latest
    name: Scan the code base for vulnerabilities
    if: ${{ !startsWith(github.event.head_commit.message, '#NORUN') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Trivy vulnerability scanner in repo mode
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          output: 'trivy-report.txt'
          exit-code: 1
          severity: HIGH
          # severity: CRITICAL

      - name: Scan failed send notification to slack
        if: ${{ failure() && steps.scan.conclusion == 'failure' }}
        uses: rtCamp/action-slack-notify@v2
        with:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_ID }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Failed Trivy scan, see uploaded report'
          SLACK_TITLE: Scan failed - Zhao Yinjie
          SLACK_USERNAME: DipSA_CICD
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: slack send Trivy scan reports
        if: ${{ failure() && steps.scan.conclusion == 'failure' }}
        uses: MeilCli/slack-upload-file@v3
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: 'trivy-report.txt'
          initial_comment: 'Scan report by Zhao Yinjie'

  build-and-push:
    runs-on: ubuntu-latest
    needs: trivy-scan-code
    if: success()
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/go-fortune:${{ github.sha }}

      - name: Install Cosign
        run: |
          curl -sL https://go.cosign.dev | sh
        shell: bash

      - name: Sign image with a private key
        run: |
          cosign sign -key ${{ secrets.COSIGN_PRIVATE_KEY }} ${{ secrets.DOCKER_USERNAME }}/go-fortune:${{ github.sha }}
        shell: bash

      - name: send success notification
        uses: rtCamp/action-slack-notify@v2
        with:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_ID }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: |
            Name: Zhao Yinjie
            Matriculation: ABCDEFG
            Email: e1221852@u.nus.edu
            Repository: https://github.com/duckmangg35/CICD
            Docker Hub URL: ${{ secrets.DOCKERHUB_URL }}
          SLACK_TITLE: 'Image build and signed'
          SLACK_USERNAME: 'DipSA 57 CICD'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}